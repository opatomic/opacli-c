#!/bin/sh

# variables that can be set:
#   OPA_USEGMP=1   use GMP rather than libtommath
#   CFLAGS         extra args to pass to compiler during compile stage
#   LDFLAGS        extra args to pass to linker during link stage
#   TGTOS          target os (default is from `uname`)
#   CC             program/command to compile (default cc)
#   AR             program/command to archive (default ar)
#   ARFLAGS        flags to pass to AR program (default -rcs)

# requirement to build on ubuntu:
#   sudo apt-get install build-essential

# to build for win64 on ubuntu:
#   sudo apt-get install mingw-w64
#   CC=x86_64-w64-mingw32-gcc AR=x86_64-w64-mingw32-ar TGTOS=win ./build
# to build for win32 on ubuntu:
#   sudo apt-get install mingw-w64
#   CC=i686-w64-mingw32-gcc AR=i686-w64-mingw32-ar TGTOS=win ./build
# to use GMP rather than libtommath:
#   sudo apt-get install libgmp3-dev
#   OPA_USEGMP=1 ./build
# to target 32-bit from 64-bit ubuntu:
#   sudo apt-get install gcc-multilib
#   CFLAGS="-march=i386 -m32" LDFLAGS="-march=i386 -m32" ./build
# to build for older systems/glibc:
#   LDFLAGS="-Wl,--wrap=memcpy -Wl,--hash-style=both" ./build
# to disable __stack_chk_fail (depends on glibc 2.4):
#   CFLAGS="-fno-stack-protector" ./build
# to disable all __*printf_chk (depends on glibc 2.3.4):
#   CFLAGS="-U_FORTIFY_SOURCE" ./build
# to view dependencies:
#   objdump -T out/opacli | sort


SRCDIR="$PWD/../src"
TMPDIR="$PWD/tmp"
OUTDIR="$PWD/out"

. "../deps/opac-c/build/opabuildutil.sh"

#if [[ ! ($TGTOS == "linux" || $TGTOS == "win" || $TGTOS == "darwin" ) ]]; then
#	echo "$TGTOS not supported; must set \$TGTOS properly"
#	exit 1
#fi

CFLAGS="-std=c99 -O2 -g $CFLAGS"
LDFLAGS="-g $LDFLAGS"
#CFLAGS="$(testgccopt -fno-strict-aliasing) $CFLAGS"


ensuredir "$OUTDIR"
ensuredir "$TMPDIR"
rm -rf "${TMPDIR:?}/"*


if [ "$OS" = "Windows_NT" ]; then
	# when compiling with mingw, lots of duplicated strings are added to binary. disable this
	CFLAGS="$(testgccopt -fno-ident) $CFLAGS"
fi

if [ "$OPA_USEGMP" != "1" ]; then
	INCS="-I."
	builddir "../deps/libtommath" "$TMPDIR"
	$AR $ARFLAGS "$TMPDIR/libtommath.a" "$TMPDIR"/*.o
	rm -rf "${TMPDIR:?}/"*.o
fi


if [ "$TGTOS" != "win" ]; then
	# compiling linenoise requires a feature test macro enabled and some warnings disabled
	# defining _GNU_SOURCE rather than _BSD_SOURCE to avoid dependency on __isoc99_sscanf (glibc 2.7)
	ORIGCF="$CFLAGS"
	CFLAGS="$CFLAGS -D_GNU_SOURCE $(testgccopt -Wno-missing-prototypes) $(testgccopt -Wno-pedantic)"
	INCS="-I./"
	buildcfile "../deps/linenoise/linenoise.c" "$TMPDIR"
	CFLAGS="$ORIGCF"
fi


DEFS="-DOPA_NOTHREADS"

if [ "$OPA_USEGMP" = "1" ]; then
	DEFS="$DEFS -DOPA_USEGMP"
	echo "linking with GMP"
	LNLIBS="$LNLIBS -lgmp"
else
	LNLIBS="$LNLIBS libtommath.a"
fi

if [ "$TGTOS" = "win" ]; then
	DEFS="$DEFS -DWIN32_LEAN_AND_MEAN -D__USE_MINGW_ANSI_STDIO"
	DEFS="$DEFS -D_WIN32_WINNT=0x0500 -DWINVER=0x0500"
	LNLIBS="$LNLIBS -lws2_32"
	LDFLAGS="-municode $LDFLAGS"
fi

INCS="-I./ -I../deps/libtommath"
OPACVER=$(cat ../deps/opac-c/build/version.txt) || exit 1
DEFS="$DEFS -DOPAC_VERSION=\"$OPACVER\""
builddir "../deps/opac-c/src" "$TMPDIR"

INCS="-I../deps/opac-c/src -I../deps/linenoise"
DEFS="$DEFS -DOPACLI_VERSION=\"$(./verget)\""
builddir "$SRCDIR" "$TMPDIR"

CFLAGS="$CFLAGS $(testgccopt -fno-lto)"
buildcfile "../deps/opac-c/build/wrapmemcpy.c" "$TMPDIR"

echo "linking opacli..."
cd "$TMPDIR" || exit 1
FLIST="$(ls ./*.o | sort)"
$CC $LDFLAGS -o "$OUTDIR/opacli-debug" $FLIST $LNLIBS
if [ "$OS" = "Windows_NT" ]; then
	# running mingw on windows: appends .exe to output filename
	strip $STRIPALLFLAG -o "$OUTDIR/opacli.exe" "$OUTDIR/opacli-debug.exe"
else
	strip $STRIPALLFLAG -o "$OUTDIR/opacli" "$OUTDIR/opacli-debug"
fi

rm -rf "${TMPDIR:?}/"*
