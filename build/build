#!/bin/sh

# variables that can be set:
#   OPABIGINT_LIB  use different bigint library
#   CFLAGS         extra args to pass to compiler during compile stage
#   LDFLAGS        extra args to pass to linker during link stage
#   TGTOS          target os (default is from `uname`)
#   CC             program/command to compile (default gcc)
#   AR             program/command to archive (default ar)
#   ARFLAGS        flags to pass to AR program (default -rcs)

# requirement to build on ubuntu:
#   sudo apt-get install build-essential git

# to build for win64 on ubuntu:
#   sudo apt-get install mingw-w64
#   CC=x86_64-w64-mingw32-gcc AR=x86_64-w64-mingw32-ar TGTOS=win ./build
# to build for win32 on ubuntu:
#   sudo apt-get install mingw-w64
#   CC=i686-w64-mingw32-gcc AR=i686-w64-mingw32-ar TGTOS=win ./build
# to use GMP rather than libtommath:
#   sudo apt-get install libgmp3-dev
#   OPABIGINT_LIB=GMP ./build
# to target 32-bit from 64-bit ubuntu:
#   sudo apt-get install gcc-multilib
#   CFLAGS="-march=i686 -m32" LDFLAGS="-march=i686 -m32" ./build
# to build for older systems/glibc:
#   LDFLAGS="-Wl,--wrap=memcpy -Wl,--hash-style=both" ./build
# to disable __stack_chk_fail (depends on glibc 2.4):
#   CFLAGS="-fno-stack-protector" ./build
# to disable all __*printf_chk (depends on glibc 2.3.4):
#   CFLAGS="-U_FORTIFY_SOURCE" ./build
# to view dependencies:
#   objdump -T out/opacli | sort


SRCDIR="../src"
OTMPDIR="tmp"
OUTDIR="out"
DEPDIR="dep"
UTILDIR="util"
PBFN="$OTMPDIR/parallel.txt"

OPAC_VERSION="${OPAC_VERSION:-0.1.65}"
OPABIGINT_LIB="${OPABIGINT_LIB:-mbedtls}"
MBEDTLS_DIR="$DEPDIR/mbedtls"
MBEDTLS_BRANCH="${MBEDTLS_BRANCH:-mbedtls-2.28}"
MBEDTLS_CONFIG_FILE="mbedtls.opacli.config.h"

# note: %at is author timestamp (rather than commit timestamp which can change)
LAST_COMMIT_DATE="$(git log -1 --format=%at)" || echo "cannot determine date of last commit" >&2
[ "$LAST_COMMIT_DATE" != "" ] && export SOURCE_DATE_EPOCH="${SOURCE_DATE_EPOCH:-$LAST_COMMIT_DATE}"


# args: gitRepoUrl destDir tagToCheckout
gitCloneTag() {
	if [ ! -d "$2" ]; then
		git clone "$1" "$2"
	fi
	ORIGDIR="$PWD"
	cd "$2" || exit 1
	if [ "$(git describe --tags --dirty 2> /dev/null)" != "$3" ]; then
		git fetch
		git checkout "tags/$3"
	fi
	MODCNT=$(git status --porcelain | wc -l)
	if [ "$MODCNT" -ne 0 ]; then
		echo "error: There are $MODCNT changes to $1 dep project. Must revert or check in changes." >&2
		exit 1
	fi
	cd "$ORIGDIR" || exit 1
}

gitCloneTag "https://github.com/opatomic/opac-c.git" "$DEPDIR/opac-c" "v$OPAC_VERSION"
. "$DEPDIR/opac-c/build/opabuildutil.sh"

if [ "$PBFN" != "" ]; then
	mkdir -p "$UTILDIR"
	[ -f "$PBFN" ] && rm "$PBFN"
	cc parallel.c -o "$UTILDIR/parallel" -std=c99 -O2 -s $GCCWARN -lpthread
	"$UTILDIR/parallel" < /dev/null > /dev/null 2>&1 || PBFN=""
fi

#if [[ ! ($TGTOS == "linux" || $TGTOS == "win" || $TGTOS == "darwin" ) ]]; then
#	echo "$TGTOS not supported; must set \$TGTOS properly"
#	exit 1
#fi

CFLAGS="-std=c99 -O2 -g $CFLAGS"
CFLAGS="-D_FILE_OFFSET_BITS=64 $CFLAGS"
LDFLAGS="-g $LDFLAGS"
#CFLAGS="$(testgccopt -fno-strict-aliasing) $CFLAGS"

if [ "$OPABIGINT_LIB" = "mbedtls" ]; then
	CFLAGS="-DOPABIGINT_USE_MBED $CFLAGS"
	if [ "$OPA_MBEDTLS" = "0" ]; then
		LNLIBS="$LNLIBS $MBEDTLS_DIR/library/libmbedcrypto.a"
	fi
elif [ "$OPABIGINT_LIB" = "LTM" ]; then
	CFLAGS="-DOPABIGINT_USE_LTM $CFLAGS"
	LNLIBS="$LNLIBS $OTMPDIR/libtommath.a"
elif [ "$OPABIGINT_LIB" = "GMP" ]; then
	echo "linking with GMP"
	CFLAGS="-DOPABIGINT_USE_GMP $CFLAGS"
	LNLIBS="$LNLIBS -lgmp"
elif [ "$OPABIGINT_LIB" = "openssl" ]; then
	CFLAGS="-DOPABIGINT_USE_OPENSSL $CFLAGS"
else
	echo "unknown bigint lib \$OPABIGINT_LIB=$OPABIGINT_LIB"
	exit 1
fi

mkdir -p "$OUTDIR"
mkdir -p "$OTMPDIR"
mkdir -p "$DEPDIR"
rm -rf "${OTMPDIR:?}/"*


if [ "$OS" = "Windows_NT" ]; then
	# when compiling with mingw, lots of duplicated strings are added to binary. disable this
	CFLAGS="$(testgccopt -fno-ident) $CFLAGS"
fi

if [ "$OPABIGINT_LIB" = "LTM" ]; then
	INCS=""
	builddir "../deps/libtommath" "$OTMPDIR"
	pbuild
	$AR $ARFLAGS "$OTMPDIR/libtommath.a" "$OTMPDIR"/*.o
	rm -rf "${OTMPDIR:?}/"*.o
fi


if [ "$TGTOS" != "win" ]; then
	# compiling linenoise requires a feature test macro enabled and some warnings disabled
	# defining _GNU_SOURCE rather than _BSD_SOURCE to avoid dependency on __isoc99_sscanf (glibc 2.7)
	ORIGCF="$CFLAGS"
	CFLAGS="$CFLAGS -D_GNU_SOURCE $(testgccopt -Wno-missing-prototypes -Wno-pedantic)"
	INCS=""
	buildcfile "../deps/linenoise/linenoise.c" "$OTMPDIR"
	CFLAGS="$ORIGCF"
fi

. ./build-opatls.sh
opatlsSetVars
if [ "$OPA_MBEDTLS" != "0" ] || [ "$OPABIGINT_LIB" = "mbedtls" ]; then
	buildmbedtls
fi


DEFS="-DOPA_NOTHREADS"


if [ "$TGTOS" = "win" ]; then
	DEFS="$DEFS -DWIN32_LEAN_AND_MEAN -D__USE_MINGW_ANSI_STDIO"
	DEFS="$DEFS -D_WIN32_WINNT=0x0500 -DWINVER=0x0500"
	LNLIBS="$LNLIBS -lws2_32"
	LDFLAGS="-municode $LDFLAGS"
	if [ "$OPA_MBEDTLS" != "0" ] || [ "$OPABIGINT_LIB" = "mbedtls" ]; then
		LDFLAGS="-Wl,--wrap=vsnprintf_s $LDFLAGS"
	fi
fi

INCS=""
[ "$OPABIGINT_LIB" = "mbedtls" ] && INCS="$INCS -I../../../$MBEDTLS_DIR/include"
[ "$OPABIGINT_LIB" = "LTM" ] && INCS="$INCS -I../../../../deps/libtommath"
OPACVER=$(cat "$DEPDIR/opac-c/build/version.txt") || exit 1
[ "$PBFN"  = "" ] && DEFS="$DEFS -DOPAC_VERSION=\"$OPACVER\""
[ "$PBFN" != "" ] && DEFS="$DEFS -DOPAC_VERSION=\\\"$OPACVER\\\""
builddir "$DEPDIR/opac-c/src" "$OTMPDIR"

DEFS="$DEFS $OPATLS_DEFS"
[ "$PBFN"  = "" ] && DEFS="$DEFS -DOPACLI_VERSION=\"$(./verget)\""
[ "$PBFN" != "" ] && DEFS="$DEFS -DOPACLI_VERSION=\\\"$(./verget)\\\""
INCS="-I. -I../build/$DEPDIR/opac-c/src -I../deps/linenoise -I../build/$MBEDTLS_DIR/include"
builddir "$SRCDIR" "$OTMPDIR"
INCS="-I.. -I../../build/$DEPDIR/opac-c/src -I../../build/$MBEDTLS_DIR/include"
builddir "$SRCDIR/opatls" "$OTMPDIR"

CFLAGS="$CFLAGS $(testgccopt -fno-lto)"
INCS=""
buildcfile "$DEPDIR/opac-c/build/wrapmemcpy.c" "$OTMPDIR"
buildcfile "wrapvsnprintf_s.c" "$OTMPDIR"

pbuild

echo "linking opacli..."
FLIST="$(ls $OTMPDIR/*.o | sort)"
[ "$TGTOS" = "win" ] && EXEEXT=".exe" || EXEEXT=""
$CC $LDFLAGS $OPATLS_LDFLAGS -o "$OUTDIR/opacli-debug$EXEEXT" $FLIST $LNLIBS $OPATLS_LNLIBS || exit 1
strip $STRIPALLFLAG -o "$OUTDIR/opacli$EXEEXT" "$OUTDIR/opacli-debug$EXEEXT"

rm -rf "${OTMPDIR:?}/"*
